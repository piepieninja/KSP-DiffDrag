<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.UnityConnectModule</name>
    </assembly>
    <member name="T:UnityEngine.RemoteSettings">
      <summary>
        <para>Accesses remote settings (common for all game instances).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.ForceUpdate">
      <summary>
        <para>Forces the game to download the newest settings from the server and update its values.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetBool(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetCount">
      <summary>
        <para>Returns number of keys in remote settings.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetFloat(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetFloat(System.String,System.Single)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetInt(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetInt(System.String,System.Int32)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetKeys">
      <summary>
        <para>Returns all the keys in remote settings.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetString(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetString(System.String,System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.HasKey(System.String)">
      <summary>
        <para>Returns true if key exists in the remote settings.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="?:UnityEngine.RemoteSettings.Updated(UnityEngine.RemoteSettings/UpdatedEventHandler)">
      <summary>
        <para>This event occurs when a new RemoteSettings is fetched and successfully parsed from the server.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.RemoteSettings.UpdatedEventHandler">
      <summary>
        <para>This event occurs when a new RemoteSettings is fetched and successfully parsed from the server.</para>
      </summary>
    </member>
  </members>
</doc>
